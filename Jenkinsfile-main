#!groovy

COMMIT_ID = ""
RELEASE_VERSION = ""
SELECTED_SEMANTIC_VERSION_UPDATE = ""

stage 'Approve RC?'
timeout(time: 1, unit: 'DAYS') {
    def descr = "If unchanged released version will be: " + RELEASE_VERSION

    SELECTED_SEMANTIC_VERSION_UPDATE =
            input message: 'Publish release candidate?',
                    parameters: [[$class: 'ChoiceParameterDefinition',
                                  choices: 'unchanged\nmajor\nminor\npatch',
                                  description: descr,
                                  name: '']]
}

stage name: 'Publish RC', concurrency: 1
node {
    RELEASE_VERSION = releaseVersion()

    checkout([$class: 'GitSCM',
              branches: [[name: '*/master']],
              doGenerateSubmoduleConfigurations: false,
              extensions: [[$class: 'LocalBranch', localBranch: 'master'], [$class: 'WipeWorkspace']],
              submoduleCfg: [],
              userRemoteConfigs: [[url: 'git@github.com:mahanhz/activities-config-microservice.git']]])

    sh "./scripts/release/activities_config_release.sh ${RELEASE_VERSION} unchanged"
}

def releaseVersion() {
    def props = readProperties file: 'gradle.properties'
    def version = props['version']

    if (version.contains('-SNAPSHOT')) {
        version = version.replaceFirst('-SNAPSHOT', '')
    }

    return version
}